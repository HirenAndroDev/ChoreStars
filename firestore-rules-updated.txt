rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write for users collection
    match /users/{userId} {
      allow read, write: if request.auth != null 
        || (resource != null && resource.data.role == 'child');
    }
    
    // Allow read/write for families collection
    match /families/{familyId} {
      allow read, write: if request.auth != null
        || exists(/databases/$(database)/documents/users/$(request.auth.uid))
        || (request.auth == null && request.method == 'get');
    }
    
    // Allow read/write for tasks collection
    match /tasks/{taskId} {
      allow read, write: if request.auth != null
        || (resource != null && resource.data.familyId != null);
    }
    
    // Allow read/write for rewards collection  
    match /rewards/{rewardId} {
      allow read, write: if request.auth != null
        || (resource != null && resource.data.familyId != null);
    }
    
    // Allow read/write for task completions
    match /taskCompletions/{completionId} {
      allow read, write: if request.auth != null
        || (resource != null && resource.data.userId != null);
    }
    
    // Allow read/write for reward redemptions
    match /rewardRedemptions/{redemptionId} {
      allow read, write: if request.auth != null
        || (resource != null && resource.data.userId != null);
    }
    
    // Allow read/write for star transactions
    match /starTransactions/{transactionId} {
      allow read, write: if request.auth != null
        || (resource != null && resource.data.userId != null);
    }
    
    // More permissive fallback rule to allow child access
    match /{document=**} {
      allow read, write: if request.auth != null
        || (resource == null) // Allow document creation
        || (resource != null && (
          resource.data.role == 'child' ||
          resource.data.familyId != null ||
          resource.data.userId != null
        ));
    }
  }
}